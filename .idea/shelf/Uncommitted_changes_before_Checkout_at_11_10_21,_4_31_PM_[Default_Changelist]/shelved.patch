Index: src/pyion/objects/PyionUnit.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class PyionUnit:\n    def __init__(self, name, unit, value):\n        self.name = name\n        self.unit = unit\n        self.value = value\n\n    def __str__(self):\n        return f\"{self.name}({self.unit}): {self.value}\"\n\n    def c_to_k(self, temp):\n        return temp + 273.15\n\n#Temperature class, which is a subclass of PyionUnit\n\nclass Temperature(PyionUnit):\n    def __init__(self, name, unit, value):\n        super().__init__(name, unit, value)\n\n    def c_to_k(self, temp):\n        PyionUnit.c_to_k(self, temp)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pyion/objects/PyionUnit.py b/src/pyion/objects/PyionUnit.py
--- a/src/pyion/objects/PyionUnit.py	
+++ b/src/pyion/objects/PyionUnit.py	
@@ -7,8 +7,8 @@
     def __str__(self):
         return f"{self.name}({self.unit}): {self.value}"
 
-    def c_to_k(self, temp):
-        return temp + 273.15
+    #def c_to_k(self, temp):
+       # return temp + 273.15
 
 #Temperature class, which is a subclass of PyionUnit
 
@@ -16,5 +16,5 @@
     def __init__(self, name, unit, value):
         super().__init__(name, unit, value)
 
-    def c_to_k(self, temp):
-        PyionUnit.c_to_k(self, temp)
\ No newline at end of file
+    def c_to_k(self):
+            return self.value + 273.15
\ No newline at end of file
